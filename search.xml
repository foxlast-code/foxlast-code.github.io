<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C语言数组</title>
      <link href="/2024/06/01/C%E8%AF%AD%E8%A8%80%E6%95%B0%E7%BB%84/"/>
      <url>/2024/06/01/C%E8%AF%AD%E8%A8%80%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言数字数组"><a href="#C语言数字数组" class="headerlink" title="C语言数字数组"></a>C语言数字数组</h1><h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><h3 id="常用定义和初始化"><a href="#常用定义和初始化" class="headerlink" title="常用定义和初始化"></a>常用定义和初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> n 10</span></span><br><span class="line"><span class="type">int</span> s[n];</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> s[<span class="number">10</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">66</span>,<span class="number">99</span>&#125;</span><br></pre></td></tr></table></figure><p>常用的为循环输入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> s[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;s[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为printf</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,s[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><blockquote><p>重要排序算法</p><p>冒泡排序（Bubble Sort）是一种简单的排序算法，它重复地遍历要排序的列表，比较每一对相邻的元素，如果它们的顺序错误就交换它们。这个过程被重复进行直到没有需要交换的元素为止，列表因此变得有序。</p></blockquote><h4 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h4><p>本关任务:将十个数进行从大到小的顺序进行排列。</p><h4 id="测试说明"><a href="#测试说明" class="headerlink" title="测试说明"></a>测试说明</h4><p>样例输入： <code>1 2 3 4 5 6 7 8 9 10</code></p><p>样例输出： <code>10 9 8 7 6 5 4 3 2 1</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*********Begin*********/</span></span><br><span class="line">    <span class="type">int</span> i, j, temp;</span><br><span class="line">    <span class="type">int</span> s[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输入数组元素</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;s[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用冒泡排序将数组按降序排列</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span> - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">10</span> - <span class="number">1</span> - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[j] &lt; s[j + <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                temp = s[j];</span><br><span class="line">                s[j] = s[j + <span class="number">1</span>];</span><br><span class="line">                s[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出排序后的数组</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, s[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*********End**********/</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这段代码的目标是将数组 <code>s</code> 按降序排序。让我们逐行解析这段代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span> - <span class="number">1</span>; i++)</span><br></pre></td></tr></table></figure><p>这个外层 <code>for</code> 循环<strong>控制整个冒泡排序过程需要执行的轮数</strong>。由于每一轮最大的元素都会被移到最后，我们实际上只需要执行 <code>n-1</code> 轮（这里 <code>n</code> 是数组的长度）。因此，循环的范围是 <code>0</code> 到 <code>8</code>（共 9 次）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">10</span> - <span class="number">1</span> - i; j++)</span><br></pre></td></tr></table></figure><p>内层 <code>for</code> 循环用于<strong>控制每轮遍历</strong>。每一轮都需要比较并可能交换相邻的元素对。注意，循环的上限是 <code>10 - 1 - i</code>，这是因为随着每一轮的进行，已经排序好的元素会逐渐“冒泡”到数组的末尾，这部分元素不需要再比较。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(s[j] &lt; s[j + <span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>这里的 <code>if</code> 语句检查当前元素 <code>s[j]</code> 是否小于下一个元素 <code>s[j + 1]</code>。如果是，则需要交换它们以确保更大的元素在前（实现降序排序）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">temp = s[j];</span><br><span class="line">s[j] = s[j + <span class="number">1</span>];</span><br><span class="line">s[j + <span class="number">1</span>] = temp;</span><br></pre></td></tr></table></figure><p>这三行代码实现了元素交换：</p><ol><li>把 <code>s[j]</code> 的值存到临时变量 <code>temp</code> 中。</li><li>把 <code>s[j + 1]</code> 的值赋给 <code>s[j]</code>。</li><li>把 <code>temp</code> 中的原 <code>s[j]</code> 值赋给 <code>s[j + 1]</code>。</li></ol><p>通过上述步骤，这对元素被交换，较大的元素移动到了前面。</p><h3 id="代码整体流程"><a href="#代码整体流程" class="headerlink" title="代码整体流程"></a>代码整体流程</h3><ol><li><strong>初始化外层循环</strong>：<code>i</code> 从 <code>0</code> 开始递增到 <code>8</code>。</li><li><strong>内层循环</strong>：每次遍历数组的前 <code>10 - 1 - i</code> 个元素，对每对相邻元素进行比较和交换。</li><li><strong>元素交换</strong>：如果前一个元素小于后一个元素，就交换它们，使较大的元素移到前面。</li><li><strong>重复上述过程</strong>：直到所有元素都被正确排序为止。</li></ol><p>最终，经过 <code>n-1</code> 轮比较和交换，数组 <code>s</code> 将按降序排序。</p><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><blockquote><p>二维数组是数组的一种扩展形式，可以用来表示矩阵、表格或其他网格状的数据结构。在C语言中，二维数组是一个数组的数组，这意味着它是一个包含多个一维数组的数组。</p></blockquote><h3 id="定义和初始化二维数组"><a href="#定义和初始化二维数组" class="headerlink" title="定义和初始化二维数组"></a>定义和初始化二维数组</h3><p>在C语言中，可以这样定义和初始化一个二维数组：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="built_in">array</span>[<span class="number">3</span>][<span class="number">4</span>]; <span class="comment">// 定义一个3行4列的二维数组</span></span><br></pre></td></tr></table></figure><p>这段代码定义了一个包含3个一维数组的数组，每个一维数组包含4个整数元素。</p><p>可以在定义时进行初始化：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="built_in">array</span>[<span class="number">3</span>][<span class="number">4</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">    &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这将数组初始化为如下形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span></span><br><span class="line"><span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span></span><br><span class="line"><span class="number">9</span>  <span class="number">10</span> <span class="number">11</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><h3 id="访问二维数组元素"><a href="#访问二维数组元素" class="headerlink" title="访问二维数组元素"></a>访问二维数组元素</h3><p>可以使用下标访问二维数组中的元素：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> value = <span class="built_in">array</span>[<span class="number">1</span>][<span class="number">2</span>]; <span class="comment">// 访问第二行第三列的元素，值为7</span></span><br><span class="line"><span class="built_in">array</span>[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">42</span>;        <span class="comment">// 将第一行第一列的元素设置为42</span></span><br></pre></td></tr></table></figure><h3 id="遍历二维数组"><a href="#遍历二维数组" class="headerlink" title="遍历二维数组"></a>遍历二维数组</h3><p>可以使用嵌套的循环遍历二维数组：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">array</span>[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码将打印二维数组的所有元素，每行一个。</p><h3 id="应用二维数组的示例程序"><a href="#应用二维数组的示例程序" class="headerlink" title="应用二维数组的示例程序"></a>应用二维数组的示例程序</h3><p>让我们看一个简单的示例程序，它读取一个二维数组的输入并打印出来：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> rows = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> cols = <span class="number">4</span>;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[rows][cols];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取二维数组输入</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入 %d 行 %d 列的数组元素：\n&quot;</span>, rows, cols);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;<span class="built_in">array</span>[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印二维数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入的二维数组是：\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">array</span>[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><strong>定义</strong>：使用 <code>type array[rows][cols]</code> 定义二维数组，其中 <code>type</code> 是数据类型，<code>rows</code> 是行数，<code>cols</code> 是列数。</li><li><strong>初始化</strong>：可以在定义时对数组进行初始化，使用大括号 <code>&#123;&#125;</code> 分别包围每一行的数据。</li><li><strong>访问</strong>：使用 <code>array[i][j]</code> 访问第 <code>i</code> 行第 <code>j</code> 列的元素。</li><li><strong>遍历</strong>：使用嵌套的 <code>for</code> 循环遍历数组的所有元素。</li></ul><p>二维数组在存储和处理矩阵、表格数据时非常有用，在科学计算、图像处理和游戏开发中广泛应用，如五子棋，贪吃蛇等。</p><h4 id="任务描述-1"><a href="#任务描述-1" class="headerlink" title="任务描述"></a>任务描述</h4><p>题目描述:按如下函数原型编程从键盘输入一个<code>m</code>行<code>n</code>列的二维数组，然后计算数组中元素的最大值及其所在的行列下标值。其中<code>m</code>和<code>n</code>的值由用户键盘输入。已知<code>m</code>和<code>n</code>的值都不超过<code>10</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> rows, cols;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取二维数组的行数和列数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter the number of rows: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;rows);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter the number of columns: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;cols);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[rows][cols];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取二维数组的元素</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter the elements of the array:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;<span class="built_in">array</span>[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查找二维数组中的最大值</span></span><br><span class="line">    <span class="type">int</span> max_value = <span class="built_in">array</span>[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[i][j] &gt; max_value) &#123;</span><br><span class="line">                max_value = <span class="built_in">array</span>[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印最大值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The maximum value in the array is: %d\n&quot;</span>, max_value);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码说明："><a href="#代码说明：" class="headerlink" title="代码说明："></a>代码说明：</h3><ol><li><strong>读取数组的维度</strong>：<ul><li>程序首先提示用户输入二维数组的行数和列数，并将其存储在<code>rows</code>和<code>cols</code>变量中。</li></ul></li><li><strong>读取数组的元素</strong>：<ul><li>程序创建一个具有<code>rows</code>行和<code>cols</code>列的二维数组<code>array</code>。</li><li>使用嵌套的<code>for</code>循环遍历每个数组元素，并提示用户输入这些元素的值。</li></ul></li><li><strong>查找最大值</strong>：<ul><li>初始化<code>max_value</code>为数组的第一个元素<code>array[0][0]</code>。</li><li>再次使用嵌套的<code>for</code>循环遍历每个数组元素，如果发现某个元素大于当前的<code>max_value</code>，则更新<code>max_value</code>。</li></ul></li><li><strong>打印最大值</strong>：<ul><li>最后，程序打印出找到的最大值。</li></ul></li></ol><h3 id="使用示例："><a href="#使用示例：" class="headerlink" title="使用示例："></a>使用示例：</h3><p>假设输入如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Enter the number of rows: <span class="number">3</span></span><br><span class="line">Enter the number of columns: <span class="number">3</span></span><br><span class="line">Enter the elements of the <span class="built_in">array</span>:</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><p>程序的输出将是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The maximum value in the <span class="built_in">array</span> is: <span class="number">9</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>枚举算法</title>
      <link href="/2024/05/23/%E6%9E%9A%E4%B8%BE%E7%AE%97%E6%B3%95/"/>
      <url>/2024/05/23/%E6%9E%9A%E4%B8%BE%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="1-枚举算法思想"><a href="#1-枚举算法思想" class="headerlink" title="1.枚举算法思想"></a>1.枚举算法思想</h2><p>枚举（enumeration），又被称为穷举。</p><p>是一种很朴素的解题思想，当问题存在大量的可能答案时，而暂时又无法用逻辑方法排除大部分候选答案时，就<strong>不得不采用逐一检验这些答案的策略</strong>，这就是枚举算法的思想。</p><blockquote><p>当不考虑算法的优劣性，即时间空间复杂度，运行代码的快慢，则可用枚举暴力求解。</p></blockquote><h2 id="2-枚举算法实现要点"><a href="#2-枚举算法实现要点" class="headerlink" title="2.枚举算法实现要点"></a>2.枚举算法实现要点</h2><p>实现枚举算法时，一定要注意：</p><ol><li><strong>为保证结果正确，应做到既不重复又不遗漏。</strong></li><li><strong>为减少程序运行时间，应j尽量减少枚举的次数。</strong></li></ol><h3 id="（1）既不重复又不遗漏"><a href="#（1）既不重复又不遗漏" class="headerlink" title="（1）既不重复又不遗漏"></a>（1）既不重复又不遗漏</h3><p>例如，求x^2+y^2 = 2000 的正整数解，如果互换x和y视为同一组解，如（8，44）和（44，8），那么y就不能从1枚举到44，否则得到的解就重复了，y只能从1枚举到x（或从x枚举到44）。</p><h3 id="（2）尽量减少枚举次数"><a href="#（2）尽量减少枚举次数" class="headerlink" title="（2）尽量减少枚举次数"></a>（2）尽量减少枚举次数</h3><blockquote><p>一般有两种方法 </p></blockquote><ol><li><strong>减少枚举量（即循环层数）</strong></li><li><strong>减少枚举的范围（即某层循环的次数）</strong></li></ol><p>对于第一种：如果内层循环的量可以由外层循环的量确定，那么内层循环就可以取消了，即减少变量。</p><p>对于第二种：如果能提前知道某种方案不可能求出解，则不能进行枚举或提前结束当前的枚举，减少不必要的枚举。</p><blockquote><p>下篇文章为枚举算法例题</p></blockquote><h2 id="小A的蓝桥系列持续更新"><a href="#小A的蓝桥系列持续更新" class="headerlink" title="小A的蓝桥系列持续更新"></a>小A的蓝桥系列持续更新</h2>]]></content>
      
      
      <categories>
          
          <category> 蓝桥系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 枚举算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站初衷</title>
      <link href="/2024/05/22/%E5%BB%BA%E7%AB%99%E5%88%9D%E8%A1%B7/"/>
      <url>/2024/05/22/%E5%BB%BA%E7%AB%99%E5%88%9D%E8%A1%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="小A有话说"><a href="#小A有话说" class="headerlink" title="小A有话说"></a>小A有话说</h1><h2 id="小A的建站初衷"><a href="#小A的建站初衷" class="headerlink" title="小A的建站初衷"></a>小A的建站初衷</h2><p>我也就不说废话啦，开门见山一点。个人博客作为七八年前流行的东西，为什么我会来实现？</p><p>早在大一上我偶然看见了WHH佬的博客，看到了他无私贡献和开源了很多东西，我打心底里佩服。（主要还是被他的网页样式给迷住了）从那时起我就想做一个类似的独属于我的个人博客，当然因为是拖延症后期患者，从今年（2024）的五月开始才真正开始动手实现，中间遇到了各种各样的问题多半是在前辈的基础和ChatGPT的帮助下完成。对此建站完成，我只想说一句泰裤辣…。</p><p>到现在网站已经相对成熟，之后可能会实现评论功能，之后会专注发展小A的蓝桥之路这个系列，不定时更新。</p><p>同时欢迎与小A交换友链，有此意愿者请通过QQ与邮箱与我联系。</p><p>QQ: 541580991</p><p>Email: m13429938690@163.com</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>兴趣课-时钟的实现</title>
      <link href="/2024/05/21/%E5%85%B4%E8%B6%A3%E8%AF%BE-%E6%97%B6%E9%92%9F%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
      <url>/2024/05/21/%E5%85%B4%E8%B6%A3%E8%AF%BE-%E6%97%B6%E9%92%9F%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、关于Canvas"><a href="#一、关于Canvas" class="headerlink" title="一、关于Canvas"></a>一、关于Canvas</h2><h4 id="1-什么是canvas"><a href="#1-什么是canvas" class="headerlink" title="1. 什么是canvas"></a>1. 什么是canvas</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas&gt;是一个可以使用脚本(通常为JavaScript)在其中绘制图形的 HTML 元素。</span><br></pre></td></tr></table></figure><h4 id="2-基础结构"><a href="#2-基础结构" class="headerlink" title="2. 基础结构"></a>2. 基础结构</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;mycanvas&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">   您的浏览器不支持canvas</span><br><span class="line"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> cc=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;mycanvas&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> cxt=cc.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    <strong>canvas</strong> 标签只有两个属性—— width和height，这两个属性是可选的。当我们没有定义时，Canvas 的默认大小为300像素×150像素（宽×高，像素的单位是px）。</p><p>​    可以像给其他DOM元素一样给canvas添加样式；当开始时没有为canvas规定样式规则，其将会完全透明。</p><p>​    canvas是一个二维网格，以左上角坐标为(0,0)</p><h4 id="3-绘制矩形"><a href="#3-绘制矩形" class="headerlink" title="3. 绘制矩形"></a>3. 绘制矩形</h4><ul><li>参数:<ul><li>x与y指定了在canvas画布上所绘制的矩形的左上角（相对于原点）的坐标。</li><li>width和height设置矩形的尺寸。</li></ul></li></ul><ul><li>绘制一个填充的矩形</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fillRect</span>( x ,y ,width, height)</span><br></pre></td></tr></table></figure><ul><li>绘制一个矩形的边框</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">strokeRect</span>( x ,y ,width, height)</span><br></pre></td></tr></table></figure><h4 id="4-绘制路径"><a href="#4-绘制路径" class="headerlink" title="4. 绘制路径"></a>4. 绘制路径</h4><p>图形的基本元素是路径。路径是通过不同颜色和宽度的线段或曲线相连形成的不同形状的点的集合。一个路径，甚至一个子路径，都是闭合的。使用路径绘制图形需要一些额外的步骤。</p><ol><li>需要创建路径起始点。</li><li>使用画图命令去画出路径。</li><li>把路径封闭。</li><li>一旦路径生成，就能通过描边或填充路径区域来渲染图形。</li></ol><p>以下是所要用到的函数：</p><ul><li>新建一条路径，生成之后，图形绘制命令被指向到路径上生成路径。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">beginPath()</span><br></pre></td></tr></table></figure><ul><li>闭合路径之后图形绘制命令又重新指向到上下文中。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">closePath()</span><br></pre></td></tr></table></figure><p>这个方法会通过绘制一条从当前点到开始点的直线来闭合图形。如果图形是已经闭合了的，即当前点为开始点，该函数什么也不做。</p><ul><li>通过线条来绘制图形轮廓。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stroke()</span><br></pre></td></tr></table></figure><ul><li>通过填充路径的内容区域生成实心的图形。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fill()</span><br></pre></td></tr></table></figure><ul><li>绘制线段</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">moveTo</span>(x,y)<span class="comment">//移动笔触 </span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">lineTo</span>(x,y)<span class="comment">//将笔触移动到指定的坐标x以及y上</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cxt.<span class="title function_">beginPath</span>();</span><br><span class="line">cxt.<span class="title function_">moveTo</span>(<span class="number">150</span>,<span class="number">150</span>);</span><br><span class="line">cxt.<span class="title function_">lineTo</span>(<span class="number">150</span>,<span class="number">250</span>);</span><br><span class="line">cxt.<span class="title function_">lineTo</span>(<span class="number">300</span>,<span class="number">250</span>);</span><br><span class="line">cxt.<span class="title function_">stroke</span>();</span><br><span class="line">cxt.<span class="title function_">closePath</span>();</span><br></pre></td></tr></table></figure><h4 id="5-弧线"><a href="#5-弧线" class="headerlink" title="5. 弧线"></a>5. <strong>弧线</strong></h4><p>绘制圆弧或者圆，我们使用arc()方法</p><p><img src="https://typra-ash.oss-cn-wuhan-lr.aliyuncs.com/img_arc.gif" alt=""></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">arc</span>(x, y, radius, startAngle, endAngle, anticlockwise)</span><br></pre></td></tr></table></figure><p>画一个以（x,y）为圆心的以radius为半径的圆弧（圆），从startAngle开始到endAngle结束，参数anticlockwise 为一个布尔值。为true时，是逆时针方向，否则顺时针方向。</p><p><strong>注意：arc()函数中的角度单位是弧度，不是度数。角度与弧度的js表达式:radians=(Math.PI/180)*degrees。</strong></p><p>例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cxt.<span class="title function_">beginPath</span>();</span><br><span class="line">cxt.<span class="title function_">arc</span>(<span class="number">70</span>,<span class="number">70</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="title class_">Math</span>.<span class="property">PI</span>/<span class="number">2</span>,<span class="literal">true</span>);</span><br><span class="line">cxt.<span class="title function_">stroke</span>();</span><br><span class="line"></span><br><span class="line">cxt.<span class="title function_">beginPath</span>();</span><br><span class="line">cxt.<span class="title function_">arc</span>(<span class="number">180</span>,<span class="number">70</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="title class_">Math</span>.<span class="property">PI</span>/<span class="number">2</span>,<span class="literal">false</span>);</span><br><span class="line">cxt.<span class="title function_">stroke</span>();</span><br><span class="line"></span><br><span class="line">cxt.<span class="title function_">beginPath</span>();</span><br><span class="line">cxt.<span class="title function_">arc</span>(<span class="number">300</span>,<span class="number">70</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="title class_">Math</span>.<span class="property">PI</span>/<span class="number">2</span>,<span class="literal">true</span>);</span><br><span class="line">cxt.<span class="title function_">fill</span>();</span><br><span class="line"></span><br><span class="line">cxt.<span class="title function_">beginPath</span>();</span><br><span class="line">cxt.<span class="title function_">arc</span>(<span class="number">400</span>,<span class="number">70</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="title class_">Math</span>.<span class="property">PI</span>/<span class="number">2</span>,<span class="literal">false</span>);</span><br><span class="line">cxt.<span class="title function_">fill</span>();</span><br></pre></td></tr></table></figure><h4 id="6-色彩样式"><a href="#6-色彩样式" class="headerlink" title="6. 色彩样式"></a>6. 色彩样式</h4><p>canvas提供了两个色彩属性</p><ul><li>设置图形的填充颜色。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fillStyle = color</span><br></pre></td></tr></table></figure><ul><li>设置图形轮廓的颜色。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strokeStyle = color</span><br></pre></td></tr></table></figure><p>注意: 一旦您设置了 strokeStyle 或者 fillStyle 的值，那么这个新值就会成为新绘制的图形的默认值。如果你要给每个图形上不同的颜色，你需要重新设置 fillStyle 或 strokeStyle 的值。</p><h4 id="7-线型的样式"><a href="#7-线型的样式" class="headerlink" title="7. 线型的样式"></a>7. <strong>线型的样式</strong></h4><ul><li>设置线条宽度：lineWidth = value</li></ul><h4 id="8-渐变Gradients"><a href="#8-渐变Gradients" class="headerlink" title="8. 渐变Gradients"></a>8. <strong>渐变Gradients</strong></h4><p>我们还可以用线性或者径向的渐变来填充或描边</p><ul><li>线性渐变</li></ul><p>createLinearGradient(x1, y1, x2, y2) createLinearGradient 方法接受 4 个参数，表示渐变的起点 (x1,y1) 与终点 (x2,y2)。</p><ul><li>例子：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> linearGradient=cxt.<span class="title function_">createLinearGradient</span>(<span class="number">50</span>,<span class="number">50</span>,<span class="number">250</span>,<span class="number">250</span>);</span><br><span class="line">  linearGradient.<span class="title function_">addColorStop</span>(<span class="number">0</span>,<span class="string">&#x27;yellow&#x27;</span>);</span><br><span class="line">  linearGradient.<span class="title function_">addColorStop</span>(<span class="number">.5</span>,<span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">  linearGradient.<span class="title function_">addColorStop</span>(<span class="number">1</span>,<span class="string">&#x27;green&#x27;</span>);</span><br><span class="line">  cxt.<span class="property">fillStyle</span>=linearGradient;</span><br><span class="line">  cxt.<span class="title function_">fillRect</span>(<span class="number">50</span>,<span class="number">50</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br></pre></td></tr></table></figure><h4 id="9-绘制文本"><a href="#9-绘制文本" class="headerlink" title="9. 绘制文本"></a>9. 绘制文本</h4><p>在指定的(x,y)位置填充指定的文本，绘制的最大宽度是可选的.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fillText</span>(text, x, y [, maxWidth])</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">strokeText</span>(text, x, y [, maxWidth])</span><br></pre></td></tr></table></figure><h2 id="二、关于JavaScript"><a href="#二、关于JavaScript" class="headerlink" title="二、关于JavaScript"></a>二、关于JavaScript</h2><h4 id="1-setInterval"><a href="#1-setInterval" class="headerlink" title="1. setInterval"></a>1. setInterval</h4><ul><li><code>setInterval</code> 是 JavaScript 中的一个定时器函数，用于周期性地执行指定的代码。</li></ul><p>基本语法结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setInterval(function, milliseconds);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>function</code>: 要执行的函数或代码块</li><li><code>milliseconds</code>: 执行间隔时间（毫秒）</li></ul><p>使用示例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">javascript复制代码<span class="comment">// 每隔一秒输出一次当前时间</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">toLocaleTimeString</span>());</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>注意事项</p><ul><li><code>setInterval</code> 返回一个唯一的标识符，可通过 <code>clearInterval</code> 来清除定时器。</li></ul><h4 id="2-Date-对象"><a href="#2-Date-对象" class="headerlink" title="2. Date 对象"></a>2. Date 对象</h4><ul><li>JavaScript 中用于处理日期和时间的内置对象。</li><li>可以获取当前日期时间，创建特定日期、时间对象。</li></ul><p>获取当前日期时间</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> currentDate = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(currentDate);</span><br></pre></td></tr></table></figure><p>获取小时、分钟、秒、毫秒：<code>getHours()</code>, <code>getMinutes()</code>, <code>getSeconds()</code>,<code>getMilliseconds()</code></p><h2 id="三-源码如下"><a href="#三-源码如下" class="headerlink" title="三.源码如下"></a>三.源码如下</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1.获取画布</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> canvas = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;canvas&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 2.获取画笔</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> huabi = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        huabi.<span class="property">strokeStyle</span> = <span class="string">&quot;#0ff&quot;</span>;<span class="comment">//画笔颜色</span></span></span><br><span class="line"><span class="language-javascript">        huabi.<span class="property">lineWidth</span> = <span class="number">17</span>;<span class="comment">//画笔宽度</span></span></span><br><span class="line"><span class="language-javascript">        huabi.<span class="property">shadowBlur</span> = <span class="number">15</span><span class="comment">//阴影模糊度 数值越大越模糊</span></span></span><br><span class="line"><span class="language-javascript">        huabi.<span class="property">shadowColor</span> = <span class="string">&quot;#0ff&quot;</span><span class="comment">//阴影颜色</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//每次重复执行的代码</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 获取时间</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>()</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> today = date.<span class="title function_">toDateString</span>()</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> h = date.<span class="title function_">getHours</span>()</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> m = date.<span class="title function_">getMinutes</span>()</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> s = date.<span class="title function_">getSeconds</span>()</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> ms = date.<span class="title function_">getMilliseconds</span>()</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log( today,h,m,s,ms )</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> s1 = s + (  ms / <span class="number">1000</span> );</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> m1 = m + ( s1 / <span class="number">60</span> )</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>( s1 )</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 绘制画布底色</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> radialGradient =  huabi.<span class="title function_">createRadialGradient</span>(<span class="number">250</span>,<span class="number">250</span>,<span class="number">20</span>,<span class="number">250</span>,<span class="number">250</span>,<span class="number">300</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 规定渐变颜色</span></span></span><br><span class="line"><span class="language-javascript">            radialGradient.<span class="title function_">addColorStop</span>(<span class="number">0</span>,<span class="string">&quot;#03303a&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            radialGradient.<span class="title function_">addColorStop</span>(<span class="number">1</span>,<span class="string">&quot;#000&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="property">fillStyle</span> = radialGradient;</span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">fillRect</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">500</span>,<span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 时</span></span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">beginPath</span>()</span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">arc</span>(<span class="number">250</span>,<span class="number">250</span>,<span class="number">200</span>,<span class="number">270</span> * (<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>),((<span class="number">360</span> / <span class="number">12</span> * h) - <span class="number">90</span>) * (<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>))</span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">stroke</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 分</span></span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">beginPath</span>()</span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">arc</span>(<span class="number">250</span>,<span class="number">250</span>,<span class="number">170</span>,<span class="number">270</span> * (<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>),((<span class="number">360</span> / <span class="number">60</span> * m1) - <span class="number">90</span>) * (<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>))</span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">stroke</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 秒</span></span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">beginPath</span>()</span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">arc</span>(<span class="number">250</span>,<span class="number">250</span>,<span class="number">140</span>,<span class="number">270</span> * (<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>),((<span class="number">360</span> / <span class="number">60</span> * s1) - <span class="number">90</span>) * (<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>))</span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">stroke</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="property">font</span> = <span class="string">&quot;24px 宋体&quot;</span></span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="property">fillStyle</span> = <span class="string">&quot;#0ff&quot;</span></span></span><br><span class="line"><span class="language-javascript">            huabi.<span class="title function_">fillText</span>(today,<span class="number">160</span>,<span class="number">250</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">fun</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setInterval</span>(fun,<span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Morkdomn 快速入门</title>
      <link href="/2024/05/19/Morkdomn-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
      <url>/2024/05/19/Morkdomn-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="markdown-快速入门"><a href="#markdown-快速入门" class="headerlink" title="markdown 快速入门"></a>markdown 快速入门</h1><blockquote><p>小A带你15分钟快速入门markdown语法操作</p></blockquote><h3 id="首先使用Typora软件编写"><a href="#首先使用Typora软件编写" class="headerlink" title="首先使用Typora软件编写"></a>首先使用Typora软件编写</h3><h3 id="然后以管理员身份运行cmd窗口"><a href="#然后以管理员身份运行cmd窗口" class="headerlink" title="然后以管理员身份运行cmd窗口"></a>然后以管理员身份运行cmd窗口</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;文章的名字&quot;</span><br></pre></td></tr></table></figure><h2 id="Markdown语法介绍"><a href="#Markdown语法介绍" class="headerlink" title="Markdown语法介绍"></a>Markdown语法介绍</h2><blockquote><p>注意：以下test样式均为markdown语法</p></blockquote><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p>选用适合自己的即可</p><h2 id="2-代码块的实现"><a href="#2-代码块的实现" class="headerlink" title="2.代码块的实现"></a>2.代码块的实现</h2><p>输入```然后选择自己的使用的编程语言</p><h2 id="3-字体"><a href="#3-字体" class="headerlink" title="3.字体"></a>3.字体</h2><p>加粗样式实现-<strong>等不到天黑</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**等不到天黑**</span><br></pre></td></tr></table></figure><p>斜体实现-<em>我不是陈平安</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*我不是陈平安*</span><br></pre></td></tr></table></figure><p>删除线实现-<del>不等佳人</del></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~不等佳人~~</span><br></pre></td></tr></table></figure><h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4.引用"></a>4.引用</h2><blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 加空格 输入想输入的内容</span><br></pre></td></tr></table></figure><p>例如：</p><blockquote><p>作者：Ash</p><blockquote><p>作者：Ash</p><blockquote><p>作者：Ash</p></blockquote></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 作者：Ash</span><br><span class="line">&gt;</span><br><span class="line">&gt; &gt; 作者：Ash</span><br><span class="line">&gt; &gt;</span><br><span class="line">&gt; &gt; &gt; 作者：Ash</span><br></pre></td></tr></table></figure><h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><p>分割线1</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---</span><br></pre></td></tr></table></figure><p>分割线2</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***</span><br></pre></td></tr></table></figure><h2 id="6-图片的插入（重要）"><a href="#6-图片的插入（重要）" class="headerlink" title="6.图片的插入（重要）"></a>6.图片的插入（重要）</h2><blockquote><p>建议使用图床</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片的名称](图片的路径可以为url或本地的相对路径)</span><br></pre></td></tr></table></figure><p>或者直接从图床中拖入进来</p><p><img src="https://typra-ash.oss-cn-wuhan-lr.aliyuncs.com/home_bg.webp" alt="img"></p><p><img src="https://typra-ash.oss-cn-wuhan-lr.aliyuncs.com/1.jpg" alt="img"></p><p><img src="https://typra-ash.oss-cn-wuhan-lr.aliyuncs.com/dm6.webp" alt="img"></p><h2 id="7-超链接"><a href="#7-超链接" class="headerlink" title="7.超链接"></a>7.超链接</h2><p><a href="https://github.com/foxlast-code">我的github</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[我的github](https://github.com/foxlast-code)</span><br></pre></td></tr></table></figure><h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h2><p>1.无序列表</p><ul><li>我的意中人</li><li>剑来</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 我的意中人</span><br><span class="line">- 剑来</span><br></pre></td></tr></table></figure><p>2.有序列表</p><ol><li>首页</li><li>章节</li><li></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 首页</span><br><span class="line">2. 章节</span><br><span class="line">3. </span><br></pre></td></tr></table></figure><h2 id="9-表格等高级应用"><a href="#9-表格等高级应用" class="headerlink" title="9.表格等高级应用"></a>9.表格等高级应用</h2><p>使用快捷键或鼠标右键.</p><div class="table-container"><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2024/05/13/2024-5-13-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2024/05/13/2024-5-13-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/12/hello-world/"/>
      <url>/2024/05/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h1 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h1><h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2><h2 id="无敌懒大王"><a href="#无敌懒大王" class="headerlink" title="无敌懒大王"></a>无敌懒大王</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
